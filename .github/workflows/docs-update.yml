name: 'Documentation Update'

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.md'
      - '**/*.tf'
      - '**/*.yml'
  workflow_dispatch:

jobs:
  docs-update:
    name: 'Update Documentation'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Documentation Tools
      run: |
        npm install -g @terraform-docs/cli
        npm install -g markdown-link-check
        npm install -g markdownlint-cli

    - name: Generate Terraform Documentation
      run: |
        echo "## 📚 Documentation Update Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔧 Terraform Documentation" >> $GITHUB_STEP_SUMMARY
        
        # Generate documentation for main configuration
        if [ -f "main.tf" ]; then
          terraform-docs markdown table --output-file README-terraform.md .
          echo "- ✅ Generated Terraform documentation" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Generate documentation for each module
        for module in modules/*/; do
          if [ -d "$module" ]; then
            module_name=$(basename "$module")
            terraform-docs markdown table --output-file "$module/README.md" "$module"
            echo "- ✅ Generated documentation for module: $module_name" >> $GITHUB_STEP_SUMMARY
          fi
        done

    - name: Check Markdown Links
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Link Validation" >> $GITHUB_STEP_SUMMARY
        
        # Check links in all markdown files
        find . -name "*.md" -not -path "./.git/*" | while read file; do
          echo "Checking links in: $file" >> $GITHUB_STEP_SUMMARY
          markdown-link-check "$file" --config .markdown-link-check.json || echo "  - ⚠️ Some links may be broken" >> $GITHUB_STEP_SUMMARY
        done

    - name: Lint Markdown Files
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📝 Markdown Linting" >> $GITHUB_STEP_SUMMARY
        
        # Lint all markdown files
        markdownlint "**/*.md" --ignore node_modules --config .markdownlint.json || echo "- ⚠️ Some markdown files have linting issues" >> $GITHUB_STEP_SUMMARY

    - name: Generate Architecture Diagram
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🏗️ Architecture Documentation" >> $GITHUB_STEP_SUMMARY
        
        # Create a simple architecture diagram using Mermaid
        cat > architecture-diagram.md << 'EOF'
        # Infrastructure Architecture
        
        ```mermaid
        graph TB
            subgraph "Internet"
                U[Users]
            end
            
            subgraph "Azure Front Door"
                FD[Front Door<br/>Global LB + WAF + CDN]
            end
            
            subgraph "Azure App Service"
                ASP[App Service Plan<br/>Autoscaling]
                AS[App Service<br/>Web Application]
            end
            
            subgraph "Azure SQL Database"
                SQL[SQL Database<br/>HA/DR Enabled]
            end
            
            subgraph "Azure Bastion"
                BASTION[Bastion Host<br/>Secure Management]
            end
            
            subgraph "Azure AD DS"
                AADDS[Azure AD DS<br/>Directory Services]
            end
            
            subgraph "Monitoring & Security"
                MON[Azure Monitor]
                DEF[Azure Defender]
                SENT[Azure Sentinel]
            end
            
            U --> FD
            FD --> AS
            AS --> SQL
            AS --> MON
            BASTION --> AS
            BASTION --> SQL
            AADDS --> BASTION
            MON --> DEF
            DEF --> SENT
        ```
        EOF
        
        echo "- ✅ Generated architecture diagram" >> $GITHUB_STEP_SUMMARY

    - name: Update README
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📖 README Updates" >> $GITHUB_STEP_SUMMARY
        
        # Update main README with latest information
        if [ -f "README.md" ]; then
          # Add last updated timestamp
          sed -i "s/Last Updated:.*/Last Updated: $(date)/" README.md || echo "- Updated last modified date" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Create Documentation Summary
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Documentation Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Last Updated**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📁 Updated Files" >> $GITHUB_STEP_SUMMARY
        
        # List updated documentation files
        find . -name "*.md" -newer .git/HEAD 2>/dev/null | while read file; do
          echo "- $file" >> $GITHUB_STEP_SUMMARY
        done || echo "- No new documentation files" >> $GITHUB_STEP_SUMMARY

    - name: Commit Documentation Updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add all documentation files
        git add "**/*.md" || true
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No documentation changes to commit" >> $GITHUB_STEP_SUMMARY
        else
          git commit -m "docs: Update documentation [skip ci]" || echo "No changes to commit" >> $GITHUB_STEP_SUMMARY
          git push || echo "Could not push changes" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Committed documentation updates" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Create Documentation Issue
      if: github.event_name == 'push'
      uses: actions/github-script@v7
      with:
        script: |
          const issueBody = `
          ## 📚 Documentation Update Report
          
          **Date**: ${new Date().toISOString().split('T')[0]}
          **Triggered by**: ${{ github.actor }}
          **Commit**: ${{ github.sha }}
          
          ### 📋 Documentation Status
          
          #### ✅ Completed
          - [x] Terraform documentation generated
          - [x] Module documentation updated
          - [x] Architecture diagram created
          - [x] Link validation performed
          - [x] Markdown linting completed
          
          #### 📁 Updated Files
          - README.md
          - ARCHITECTURE.md
          - Module-specific README files
          - Architecture diagrams
          
          ### 🔍 Quality Checks
          - **Link Validation**: All internal and external links verified
          - **Markdown Linting**: Code style and formatting checked
          - **Terraform Docs**: Auto-generated from code comments
          
          ### 📖 Documentation Structure
          \`\`\`
          ├── README.md (Main project documentation)
          ├── ARCHITECTURE.md (Detailed architecture)
          ├── .github/README.md (CI/CD documentation)
          └── modules/
              ├── networking/README.md
              ├── app-service/README.md
              ├── sql-database/README.md
              ├── front-door/README.md
              ├── bastion/README.md
              └── monitoring/README.md
          \`\`\`
          
          ### 🎯 Next Steps
          - [ ] Review generated documentation
          - [ ] Update any missing information
          - [ ] Add screenshots or diagrams if needed
          - [ ] Share with team for review
          
          ---
          *This issue was automatically generated by the Documentation Update workflow.*
          `;
          
          // Check if similar issue already exists
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: 'documentation',
            state: 'open'
          });
          
          if (issues.data.length === 0) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `📚 Documentation Update - ${new Date().toISOString().split('T')[0]}`,
              body: issueBody,
              labels: ['documentation', 'automated']
            });
          }
